
template.elf:     file format elf32-avr


Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  2c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  34:	0c 94 c4 01 	jmp	0x388	; 0x388 <__vector_13>
  38:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  48:	0c 94 80 00 	jmp	0x100	; 0x100 <__vector_18>
  4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  54:	0c 94 6a 02 	jmp	0x4d4	; 0x4d4 <__vector_21>
  58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	ea e0       	ldi	r30, 0x0A	; 10
  7c:	f6 e0       	ldi	r31, 0x06	; 6
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	a6 36       	cpi	r26, 0x66	; 102
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
  8a:	21 e0       	ldi	r18, 0x01	; 1
  8c:	a6 e6       	ldi	r26, 0x66	; 102
  8e:	b1 e0       	ldi	r27, 0x01	; 1
  90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
  92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
  94:	ac 36       	cpi	r26, 0x6C	; 108
  96:	b2 07       	cpc	r27, r18
  98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
  9a:	0e 94 b9 01 	call	0x372	; 0x372 <main>
  9e:	0c 94 03 03 	jmp	0x606	; 0x606 <_exit>

000000a2 <__bad_interrupt>:
  a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <uartGetTimeOutState>:
  a6:	cf 93       	push	r28
  a8:	df 93       	push	r29
  aa:	cd b7       	in	r28, 0x3d	; 61
  ac:	de b7       	in	r29, 0x3e	; 62
  ae:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
  b2:	8a 3a       	cpi	r24, 0xAA	; 170
  b4:	29 f4       	brne	.+10     	; 0xc0 <uartGetTimeOutState+0x1a>
  b6:	85 e5       	ldi	r24, 0x55	; 85
  b8:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
  bc:	81 e0       	ldi	r24, 0x01	; 1
  be:	01 c0       	rjmp	.+2      	; 0xc2 <uartGetTimeOutState+0x1c>
  c0:	80 e0       	ldi	r24, 0x00	; 0
  c2:	df 91       	pop	r29
  c4:	cf 91       	pop	r28
  c6:	08 95       	ret

000000c8 <uartRegisterInterrupt>:
  c8:	cf 93       	push	r28
  ca:	df 93       	push	r29
  cc:	00 d0       	rcall	.+0      	; 0xce <uartRegisterInterrupt+0x6>
  ce:	cd b7       	in	r28, 0x3d	; 61
  d0:	de b7       	in	r29, 0x3e	; 62
  d2:	9a 83       	std	Y+2, r25	; 0x02
  d4:	89 83       	std	Y+1, r24	; 0x01
  d6:	81 ec       	ldi	r24, 0xC1	; 193
  d8:	90 e0       	ldi	r25, 0x00	; 0
  da:	21 ec       	ldi	r18, 0xC1	; 193
  dc:	30 e0       	ldi	r19, 0x00	; 0
  de:	f9 01       	movw	r30, r18
  e0:	20 81       	ld	r18, Z
  e2:	20 68       	ori	r18, 0x80	; 128
  e4:	fc 01       	movw	r30, r24
  e6:	20 83       	st	Z, r18
  e8:	89 81       	ldd	r24, Y+1	; 0x01
  ea:	9a 81       	ldd	r25, Y+2	; 0x02
  ec:	90 93 67 01 	sts	0x0167, r25	; 0x800167 <__data_end+0x1>
  f0:	80 93 66 01 	sts	0x0166, r24	; 0x800166 <__data_end>
  f4:	00 00       	nop
  f6:	0f 90       	pop	r0
  f8:	0f 90       	pop	r0
  fa:	df 91       	pop	r29
  fc:	cf 91       	pop	r28
  fe:	08 95       	ret

00000100 <__vector_18>:
 100:	1f 92       	push	r1
 102:	0f 92       	push	r0
 104:	00 90 5f 00 	lds	r0, 0x005F	; 0x80005f <__TEXT_REGION_LENGTH__+0x7e005f>
 108:	0f 92       	push	r0
 10a:	11 24       	eor	r1, r1
 10c:	2f 93       	push	r18
 10e:	3f 93       	push	r19
 110:	4f 93       	push	r20
 112:	5f 93       	push	r21
 114:	6f 93       	push	r22
 116:	7f 93       	push	r23
 118:	8f 93       	push	r24
 11a:	9f 93       	push	r25
 11c:	af 93       	push	r26
 11e:	bf 93       	push	r27
 120:	ef 93       	push	r30
 122:	ff 93       	push	r31
 124:	cf 93       	push	r28
 126:	df 93       	push	r29
 128:	cd b7       	in	r28, 0x3d	; 61
 12a:	de b7       	in	r29, 0x3e	; 62
 12c:	80 91 66 01 	lds	r24, 0x0166	; 0x800166 <__data_end>
 130:	90 91 67 01 	lds	r25, 0x0167	; 0x800167 <__data_end+0x1>
 134:	89 2b       	or	r24, r25
 136:	31 f0       	breq	.+12     	; 0x144 <__vector_18+0x44>
 138:	80 91 66 01 	lds	r24, 0x0166	; 0x800166 <__data_end>
 13c:	90 91 67 01 	lds	r25, 0x0167	; 0x800167 <__data_end+0x1>
 140:	fc 01       	movw	r30, r24
 142:	09 95       	icall
 144:	86 ec       	ldi	r24, 0xC6	; 198
 146:	90 e0       	ldi	r25, 0x00	; 0
 148:	fc 01       	movw	r30, r24
 14a:	80 81       	ld	r24, Z
 14c:	00 00       	nop
 14e:	df 91       	pop	r29
 150:	cf 91       	pop	r28
 152:	ff 91       	pop	r31
 154:	ef 91       	pop	r30
 156:	bf 91       	pop	r27
 158:	af 91       	pop	r26
 15a:	9f 91       	pop	r25
 15c:	8f 91       	pop	r24
 15e:	7f 91       	pop	r23
 160:	6f 91       	pop	r22
 162:	5f 91       	pop	r21
 164:	4f 91       	pop	r20
 166:	3f 91       	pop	r19
 168:	2f 91       	pop	r18
 16a:	0f 90       	pop	r0
 16c:	00 92 5f 00 	sts	0x005F, r0	; 0x80005f <__TEXT_REGION_LENGTH__+0x7e005f>
 170:	0f 90       	pop	r0
 172:	1f 90       	pop	r1
 174:	18 95       	reti

00000176 <uartInit>:
 176:	cf 93       	push	r28
 178:	df 93       	push	r29
 17a:	00 d0       	rcall	.+0      	; 0x17c <uartInit+0x6>
 17c:	cd b7       	in	r28, 0x3d	; 61
 17e:	de b7       	in	r29, 0x3e	; 62
 180:	9a 83       	std	Y+2, r25	; 0x02
 182:	89 83       	std	Y+1, r24	; 0x01
 184:	84 ec       	ldi	r24, 0xC4	; 196
 186:	90 e0       	ldi	r25, 0x00	; 0
 188:	29 81       	ldd	r18, Y+1	; 0x01
 18a:	3a 81       	ldd	r19, Y+2	; 0x02
 18c:	fc 01       	movw	r30, r24
 18e:	31 83       	std	Z+1, r19	; 0x01
 190:	20 83       	st	Z, r18
 192:	82 ec       	ldi	r24, 0xC2	; 194
 194:	90 e0       	ldi	r25, 0x00	; 0
 196:	26 e0       	ldi	r18, 0x06	; 6
 198:	fc 01       	movw	r30, r24
 19a:	20 83       	st	Z, r18
 19c:	81 ec       	ldi	r24, 0xC1	; 193
 19e:	90 e0       	ldi	r25, 0x00	; 0
 1a0:	28 e1       	ldi	r18, 0x18	; 24
 1a2:	fc 01       	movw	r30, r24
 1a4:	20 83       	st	Z, r18
 1a6:	00 00       	nop
 1a8:	0f 90       	pop	r0
 1aa:	0f 90       	pop	r0
 1ac:	df 91       	pop	r29
 1ae:	cf 91       	pop	r28
 1b0:	08 95       	ret

000001b2 <uartWriteChar>:
 1b2:	cf 93       	push	r28
 1b4:	df 93       	push	r29
 1b6:	1f 92       	push	r1
 1b8:	cd b7       	in	r28, 0x3d	; 61
 1ba:	de b7       	in	r29, 0x3e	; 62
 1bc:	89 83       	std	Y+1, r24	; 0x01
 1be:	01 c0       	rjmp	.+2      	; 0x1c2 <uartWriteChar+0x10>
 1c0:	00 00       	nop
 1c2:	80 ec       	ldi	r24, 0xC0	; 192
 1c4:	90 e0       	ldi	r25, 0x00	; 0
 1c6:	fc 01       	movw	r30, r24
 1c8:	80 81       	ld	r24, Z
 1ca:	88 2f       	mov	r24, r24
 1cc:	90 e0       	ldi	r25, 0x00	; 0
 1ce:	80 72       	andi	r24, 0x20	; 32
 1d0:	99 27       	eor	r25, r25
 1d2:	89 2b       	or	r24, r25
 1d4:	a9 f3       	breq	.-22     	; 0x1c0 <uartWriteChar+0xe>
 1d6:	86 ec       	ldi	r24, 0xC6	; 198
 1d8:	90 e0       	ldi	r25, 0x00	; 0
 1da:	29 81       	ldd	r18, Y+1	; 0x01
 1dc:	fc 01       	movw	r30, r24
 1de:	20 83       	st	Z, r18
 1e0:	00 00       	nop
 1e2:	0f 90       	pop	r0
 1e4:	df 91       	pop	r29
 1e6:	cf 91       	pop	r28
 1e8:	08 95       	ret

000001ea <uartWriteString>:
 1ea:	cf 93       	push	r28
 1ec:	df 93       	push	r29
 1ee:	00 d0       	rcall	.+0      	; 0x1f0 <uartWriteString+0x6>
 1f0:	cd b7       	in	r28, 0x3d	; 61
 1f2:	de b7       	in	r29, 0x3e	; 62
 1f4:	9a 83       	std	Y+2, r25	; 0x02
 1f6:	89 83       	std	Y+1, r24	; 0x01
 1f8:	0b c0       	rjmp	.+22     	; 0x210 <uartWriteString+0x26>
 1fa:	89 81       	ldd	r24, Y+1	; 0x01
 1fc:	9a 81       	ldd	r25, Y+2	; 0x02
 1fe:	9c 01       	movw	r18, r24
 200:	2f 5f       	subi	r18, 0xFF	; 255
 202:	3f 4f       	sbci	r19, 0xFF	; 255
 204:	3a 83       	std	Y+2, r19	; 0x02
 206:	29 83       	std	Y+1, r18	; 0x01
 208:	fc 01       	movw	r30, r24
 20a:	80 81       	ld	r24, Z
 20c:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <uartWriteChar>
 210:	89 81       	ldd	r24, Y+1	; 0x01
 212:	9a 81       	ldd	r25, Y+2	; 0x02
 214:	fc 01       	movw	r30, r24
 216:	80 81       	ld	r24, Z
 218:	88 23       	and	r24, r24
 21a:	79 f7       	brne	.-34     	; 0x1fa <uartWriteString+0x10>
 21c:	00 00       	nop
 21e:	0f 90       	pop	r0
 220:	0f 90       	pop	r0
 222:	df 91       	pop	r29
 224:	cf 91       	pop	r28
 226:	08 95       	ret

00000228 <uartGetChar>:
 228:	cf 93       	push	r28
 22a:	df 93       	push	r29
 22c:	cd b7       	in	r28, 0x3d	; 61
 22e:	de b7       	in	r29, 0x3e	; 62
 230:	01 c0       	rjmp	.+2      	; 0x234 <uartGetChar+0xc>
 232:	00 00       	nop
 234:	80 ec       	ldi	r24, 0xC0	; 192
 236:	90 e0       	ldi	r25, 0x00	; 0
 238:	fc 01       	movw	r30, r24
 23a:	80 81       	ld	r24, Z
 23c:	88 23       	and	r24, r24
 23e:	cc f7       	brge	.-14     	; 0x232 <uartGetChar+0xa>
 240:	86 ec       	ldi	r24, 0xC6	; 198
 242:	90 e0       	ldi	r25, 0x00	; 0
 244:	fc 01       	movw	r30, r24
 246:	80 81       	ld	r24, Z
 248:	df 91       	pop	r29
 24a:	cf 91       	pop	r28
 24c:	08 95       	ret

0000024e <uartGetCharTimeOut>:
 24e:	cf 93       	push	r28
 250:	df 93       	push	r29
 252:	00 d0       	rcall	.+0      	; 0x254 <uartGetCharTimeOut+0x6>
 254:	cd b7       	in	r28, 0x3d	; 61
 256:	de b7       	in	r29, 0x3e	; 62
 258:	9a 83       	std	Y+2, r25	; 0x02
 25a:	89 83       	std	Y+1, r24	; 0x01
 25c:	11 c0       	rjmp	.+34     	; 0x280 <uartGetCharTimeOut+0x32>
	...
 276:	89 81       	ldd	r24, Y+1	; 0x01
 278:	9a 81       	ldd	r25, Y+2	; 0x02
 27a:	01 97       	sbiw	r24, 0x01	; 1
 27c:	9a 83       	std	Y+2, r25	; 0x02
 27e:	89 83       	std	Y+1, r24	; 0x01
 280:	80 ec       	ldi	r24, 0xC0	; 192
 282:	90 e0       	ldi	r25, 0x00	; 0
 284:	fc 01       	movw	r30, r24
 286:	80 81       	ld	r24, Z
 288:	88 23       	and	r24, r24
 28a:	24 f0       	brlt	.+8      	; 0x294 <uartGetCharTimeOut+0x46>
 28c:	89 81       	ldd	r24, Y+1	; 0x01
 28e:	9a 81       	ldd	r25, Y+2	; 0x02
 290:	89 2b       	or	r24, r25
 292:	29 f7       	brne	.-54     	; 0x25e <uartGetCharTimeOut+0x10>
 294:	89 81       	ldd	r24, Y+1	; 0x01
 296:	9a 81       	ldd	r25, Y+2	; 0x02
 298:	89 2b       	or	r24, r25
 29a:	29 f4       	brne	.+10     	; 0x2a6 <uartGetCharTimeOut+0x58>
 29c:	8a ea       	ldi	r24, 0xAA	; 170
 29e:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
 2a2:	80 e0       	ldi	r24, 0x00	; 0
 2a4:	04 c0       	rjmp	.+8      	; 0x2ae <uartGetCharTimeOut+0x60>
 2a6:	86 ec       	ldi	r24, 0xC6	; 198
 2a8:	90 e0       	ldi	r25, 0x00	; 0
 2aa:	fc 01       	movw	r30, r24
 2ac:	80 81       	ld	r24, Z
 2ae:	0f 90       	pop	r0
 2b0:	0f 90       	pop	r0
 2b2:	df 91       	pop	r29
 2b4:	cf 91       	pop	r28
 2b6:	08 95       	ret

000002b8 <uart_rcv_event>:
 2b8:	cf 93       	push	r28
 2ba:	df 93       	push	r29
 2bc:	cd b7       	in	r28, 0x3d	; 61
 2be:	de b7       	in	r29, 0x3e	; 62
 2c0:	81 e0       	ldi	r24, 0x01	; 1
 2c2:	91 e0       	ldi	r25, 0x01	; 1
 2c4:	0e 94 f5 00 	call	0x1ea	; 0x1ea <uartWriteString>
 2c8:	80 e0       	ldi	r24, 0x00	; 0
 2ca:	0e 94 bd 02 	call	0x57a	; 0x57a <adcStartMeasurement>
 2ce:	00 00       	nop
 2d0:	df 91       	pop	r29
 2d2:	cf 91       	pop	r28
 2d4:	08 95       	ret

000002d6 <adc_fin_event>:
 2d6:	cf 93       	push	r28
 2d8:	df 93       	push	r29
 2da:	00 d0       	rcall	.+0      	; 0x2dc <adc_fin_event+0x6>
 2dc:	cd b7       	in	r28, 0x3d	; 61
 2de:	de b7       	in	r29, 0x3e	; 62
 2e0:	9a 83       	std	Y+2, r25	; 0x02
 2e2:	89 83       	std	Y+1, r24	; 0x01
 2e4:	86 e2       	ldi	r24, 0x26	; 38
 2e6:	91 e0       	ldi	r25, 0x01	; 1
 2e8:	0e 94 f5 00 	call	0x1ea	; 0x1ea <uartWriteString>
 2ec:	00 00       	nop
 2ee:	0f 90       	pop	r0
 2f0:	0f 90       	pop	r0
 2f2:	df 91       	pop	r29
 2f4:	cf 91       	pop	r28
 2f6:	08 95       	ret

000002f8 <timer_ov_interrupt>:
 2f8:	cf 93       	push	r28
 2fa:	df 93       	push	r29
 2fc:	cd b7       	in	r28, 0x3d	; 61
 2fe:	de b7       	in	r29, 0x3e	; 62
 300:	85 e2       	ldi	r24, 0x25	; 37
 302:	90 e0       	ldi	r25, 0x00	; 0
 304:	25 e2       	ldi	r18, 0x25	; 37
 306:	30 e0       	ldi	r19, 0x00	; 0
 308:	f9 01       	movw	r30, r18
 30a:	30 81       	ld	r19, Z
 30c:	20 e2       	ldi	r18, 0x20	; 32
 30e:	23 27       	eor	r18, r19
 310:	fc 01       	movw	r30, r24
 312:	20 83       	st	Z, r18
 314:	00 00       	nop
 316:	df 91       	pop	r29
 318:	cf 91       	pop	r28
 31a:	08 95       	ret

0000031c <init>:
 31c:	cf 93       	push	r28
 31e:	df 93       	push	r29
 320:	cd b7       	in	r28, 0x3d	; 61
 322:	de b7       	in	r29, 0x3e	; 62
 324:	84 e2       	ldi	r24, 0x24	; 36
 326:	90 e0       	ldi	r25, 0x00	; 0
 328:	24 e2       	ldi	r18, 0x24	; 36
 32a:	30 e0       	ldi	r19, 0x00	; 0
 32c:	f9 01       	movw	r30, r18
 32e:	20 81       	ld	r18, Z
 330:	20 62       	ori	r18, 0x20	; 32
 332:	fc 01       	movw	r30, r24
 334:	20 83       	st	Z, r18
 336:	85 e2       	ldi	r24, 0x25	; 37
 338:	90 e0       	ldi	r25, 0x00	; 0
 33a:	25 e2       	ldi	r18, 0x25	; 37
 33c:	30 e0       	ldi	r19, 0x00	; 0
 33e:	f9 01       	movw	r30, r18
 340:	20 81       	ld	r18, Z
 342:	20 62       	ori	r18, 0x20	; 32
 344:	fc 01       	movw	r30, r24
 346:	20 83       	st	Z, r18
 348:	87 e6       	ldi	r24, 0x67	; 103
 34a:	90 e0       	ldi	r25, 0x00	; 0
 34c:	0e 94 bb 00 	call	0x176	; 0x176 <uartInit>
 350:	0e 94 a6 02 	call	0x54c	; 0x54c <adcInit>
 354:	0e 94 fb 01 	call	0x3f6	; 0x3f6 <timerInit>
 358:	8b e6       	ldi	r24, 0x6B	; 107
 35a:	91 e0       	ldi	r25, 0x01	; 1
 35c:	0e 94 4e 02 	call	0x49c	; 0x49c <adcRegisterInterrupt>
 360:	8c e5       	ldi	r24, 0x5C	; 92
 362:	91 e0       	ldi	r25, 0x01	; 1
 364:	0e 94 64 00 	call	0xc8	; 0xc8 <uartRegisterInterrupt>
 368:	78 94       	sei
 36a:	00 00       	nop
 36c:	df 91       	pop	r29
 36e:	cf 91       	pop	r28
 370:	08 95       	ret

00000372 <main>:
 372:	cf 93       	push	r28
 374:	df 93       	push	r29
 376:	cd b7       	in	r28, 0x3d	; 61
 378:	de b7       	in	r29, 0x3e	; 62
 37a:	0e 94 8e 01 	call	0x31c	; 0x31c <init>
 37e:	8a e4       	ldi	r24, 0x4A	; 74
 380:	91 e0       	ldi	r25, 0x01	; 1
 382:	0e 94 f5 00 	call	0x1ea	; 0x1ea <uartWriteString>
 386:	ff cf       	rjmp	.-2      	; 0x386 <main+0x14>

00000388 <__vector_13>:
 388:	1f 92       	push	r1
 38a:	0f 92       	push	r0
 38c:	00 90 5f 00 	lds	r0, 0x005F	; 0x80005f <__TEXT_REGION_LENGTH__+0x7e005f>
 390:	0f 92       	push	r0
 392:	11 24       	eor	r1, r1
 394:	2f 93       	push	r18
 396:	3f 93       	push	r19
 398:	4f 93       	push	r20
 39a:	5f 93       	push	r21
 39c:	6f 93       	push	r22
 39e:	7f 93       	push	r23
 3a0:	8f 93       	push	r24
 3a2:	9f 93       	push	r25
 3a4:	af 93       	push	r26
 3a6:	bf 93       	push	r27
 3a8:	ef 93       	push	r30
 3aa:	ff 93       	push	r31
 3ac:	cf 93       	push	r28
 3ae:	df 93       	push	r29
 3b0:	cd b7       	in	r28, 0x3d	; 61
 3b2:	de b7       	in	r29, 0x3e	; 62
 3b4:	80 91 68 01 	lds	r24, 0x0168	; 0x800168 <timer_overflow_int_funct>
 3b8:	90 91 69 01 	lds	r25, 0x0169	; 0x800169 <timer_overflow_int_funct+0x1>
 3bc:	89 2b       	or	r24, r25
 3be:	31 f0       	breq	.+12     	; 0x3cc <__vector_13+0x44>
 3c0:	80 91 68 01 	lds	r24, 0x0168	; 0x800168 <timer_overflow_int_funct>
 3c4:	90 91 69 01 	lds	r25, 0x0169	; 0x800169 <timer_overflow_int_funct+0x1>
 3c8:	fc 01       	movw	r30, r24
 3ca:	09 95       	icall
 3cc:	00 00       	nop
 3ce:	df 91       	pop	r29
 3d0:	cf 91       	pop	r28
 3d2:	ff 91       	pop	r31
 3d4:	ef 91       	pop	r30
 3d6:	bf 91       	pop	r27
 3d8:	af 91       	pop	r26
 3da:	9f 91       	pop	r25
 3dc:	8f 91       	pop	r24
 3de:	7f 91       	pop	r23
 3e0:	6f 91       	pop	r22
 3e2:	5f 91       	pop	r21
 3e4:	4f 91       	pop	r20
 3e6:	3f 91       	pop	r19
 3e8:	2f 91       	pop	r18
 3ea:	0f 90       	pop	r0
 3ec:	00 92 5f 00 	sts	0x005F, r0	; 0x80005f <__TEXT_REGION_LENGTH__+0x7e005f>
 3f0:	0f 90       	pop	r0
 3f2:	1f 90       	pop	r1
 3f4:	18 95       	reti

000003f6 <timerInit>:
 3f6:	cf 93       	push	r28
 3f8:	df 93       	push	r29
 3fa:	cd b7       	in	r28, 0x3d	; 61
 3fc:	de b7       	in	r29, 0x3e	; 62
 3fe:	0e 94 05 02 	call	0x40a	; 0x40a <timerStart>
 402:	00 00       	nop
 404:	df 91       	pop	r29
 406:	cf 91       	pop	r28
 408:	08 95       	ret

0000040a <timerStart>:
 40a:	cf 93       	push	r28
 40c:	df 93       	push	r29
 40e:	cd b7       	in	r28, 0x3d	; 61
 410:	de b7       	in	r29, 0x3e	; 62
 412:	81 e8       	ldi	r24, 0x81	; 129
 414:	90 e0       	ldi	r25, 0x00	; 0
 416:	25 e0       	ldi	r18, 0x05	; 5
 418:	fc 01       	movw	r30, r24
 41a:	20 83       	st	Z, r18
 41c:	00 00       	nop
 41e:	df 91       	pop	r29
 420:	cf 91       	pop	r28
 422:	08 95       	ret

00000424 <timerStop>:
 424:	cf 93       	push	r28
 426:	df 93       	push	r29
 428:	cd b7       	in	r28, 0x3d	; 61
 42a:	de b7       	in	r29, 0x3e	; 62
 42c:	81 e8       	ldi	r24, 0x81	; 129
 42e:	90 e0       	ldi	r25, 0x00	; 0
 430:	fc 01       	movw	r30, r24
 432:	10 82       	st	Z, r1
 434:	00 00       	nop
 436:	df 91       	pop	r29
 438:	cf 91       	pop	r28
 43a:	08 95       	ret

0000043c <timerSetValue>:
 43c:	cf 93       	push	r28
 43e:	df 93       	push	r29
 440:	00 d0       	rcall	.+0      	; 0x442 <timerSetValue+0x6>
 442:	cd b7       	in	r28, 0x3d	; 61
 444:	de b7       	in	r29, 0x3e	; 62
 446:	9a 83       	std	Y+2, r25	; 0x02
 448:	89 83       	std	Y+1, r24	; 0x01
 44a:	84 e8       	ldi	r24, 0x84	; 132
 44c:	90 e0       	ldi	r25, 0x00	; 0
 44e:	29 81       	ldd	r18, Y+1	; 0x01
 450:	3a 81       	ldd	r19, Y+2	; 0x02
 452:	fc 01       	movw	r30, r24
 454:	31 83       	std	Z+1, r19	; 0x01
 456:	20 83       	st	Z, r18
 458:	00 00       	nop
 45a:	0f 90       	pop	r0
 45c:	0f 90       	pop	r0
 45e:	df 91       	pop	r29
 460:	cf 91       	pop	r28
 462:	08 95       	ret

00000464 <timerRegisterInterrupt>:
 464:	cf 93       	push	r28
 466:	df 93       	push	r29
 468:	00 d0       	rcall	.+0      	; 0x46a <timerRegisterInterrupt+0x6>
 46a:	cd b7       	in	r28, 0x3d	; 61
 46c:	de b7       	in	r29, 0x3e	; 62
 46e:	9a 83       	std	Y+2, r25	; 0x02
 470:	89 83       	std	Y+1, r24	; 0x01
 472:	89 81       	ldd	r24, Y+1	; 0x01
 474:	9a 81       	ldd	r25, Y+2	; 0x02
 476:	90 93 69 01 	sts	0x0169, r25	; 0x800169 <timer_overflow_int_funct+0x1>
 47a:	80 93 68 01 	sts	0x0168, r24	; 0x800168 <timer_overflow_int_funct>
 47e:	8f e6       	ldi	r24, 0x6F	; 111
 480:	90 e0       	ldi	r25, 0x00	; 0
 482:	2f e6       	ldi	r18, 0x6F	; 111
 484:	30 e0       	ldi	r19, 0x00	; 0
 486:	f9 01       	movw	r30, r18
 488:	20 81       	ld	r18, Z
 48a:	21 60       	ori	r18, 0x01	; 1
 48c:	fc 01       	movw	r30, r24
 48e:	20 83       	st	Z, r18
 490:	00 00       	nop
 492:	0f 90       	pop	r0
 494:	0f 90       	pop	r0
 496:	df 91       	pop	r29
 498:	cf 91       	pop	r28
 49a:	08 95       	ret

0000049c <adcRegisterInterrupt>:
 49c:	cf 93       	push	r28
 49e:	df 93       	push	r29
 4a0:	00 d0       	rcall	.+0      	; 0x4a2 <adcRegisterInterrupt+0x6>
 4a2:	cd b7       	in	r28, 0x3d	; 61
 4a4:	de b7       	in	r29, 0x3e	; 62
 4a6:	9a 83       	std	Y+2, r25	; 0x02
 4a8:	89 83       	std	Y+1, r24	; 0x01
 4aa:	8a e7       	ldi	r24, 0x7A	; 122
 4ac:	90 e0       	ldi	r25, 0x00	; 0
 4ae:	2a e7       	ldi	r18, 0x7A	; 122
 4b0:	30 e0       	ldi	r19, 0x00	; 0
 4b2:	f9 01       	movw	r30, r18
 4b4:	20 81       	ld	r18, Z
 4b6:	28 60       	ori	r18, 0x08	; 8
 4b8:	fc 01       	movw	r30, r24
 4ba:	20 83       	st	Z, r18
 4bc:	89 81       	ldd	r24, Y+1	; 0x01
 4be:	9a 81       	ldd	r25, Y+2	; 0x02
 4c0:	90 93 6b 01 	sts	0x016B, r25	; 0x80016b <adc_fin_int_funct+0x1>
 4c4:	80 93 6a 01 	sts	0x016A, r24	; 0x80016a <adc_fin_int_funct>
 4c8:	00 00       	nop
 4ca:	0f 90       	pop	r0
 4cc:	0f 90       	pop	r0
 4ce:	df 91       	pop	r29
 4d0:	cf 91       	pop	r28
 4d2:	08 95       	ret

000004d4 <__vector_21>:
 4d4:	1f 92       	push	r1
 4d6:	0f 92       	push	r0
 4d8:	00 90 5f 00 	lds	r0, 0x005F	; 0x80005f <__TEXT_REGION_LENGTH__+0x7e005f>
 4dc:	0f 92       	push	r0
 4de:	11 24       	eor	r1, r1
 4e0:	2f 93       	push	r18
 4e2:	3f 93       	push	r19
 4e4:	4f 93       	push	r20
 4e6:	5f 93       	push	r21
 4e8:	6f 93       	push	r22
 4ea:	7f 93       	push	r23
 4ec:	8f 93       	push	r24
 4ee:	9f 93       	push	r25
 4f0:	af 93       	push	r26
 4f2:	bf 93       	push	r27
 4f4:	ef 93       	push	r30
 4f6:	ff 93       	push	r31
 4f8:	cf 93       	push	r28
 4fa:	df 93       	push	r29
 4fc:	cd b7       	in	r28, 0x3d	; 61
 4fe:	de b7       	in	r29, 0x3e	; 62
 500:	80 91 6a 01 	lds	r24, 0x016A	; 0x80016a <adc_fin_int_funct>
 504:	90 91 6b 01 	lds	r25, 0x016B	; 0x80016b <adc_fin_int_funct+0x1>
 508:	89 2b       	or	r24, r25
 50a:	59 f0       	breq	.+22     	; 0x522 <__vector_21+0x4e>
 50c:	20 91 6a 01 	lds	r18, 0x016A	; 0x80016a <adc_fin_int_funct>
 510:	30 91 6b 01 	lds	r19, 0x016B	; 0x80016b <adc_fin_int_funct+0x1>
 514:	88 e7       	ldi	r24, 0x78	; 120
 516:	90 e0       	ldi	r25, 0x00	; 0
 518:	fc 01       	movw	r30, r24
 51a:	80 81       	ld	r24, Z
 51c:	91 81       	ldd	r25, Z+1	; 0x01
 51e:	f9 01       	movw	r30, r18
 520:	09 95       	icall
 522:	00 00       	nop
 524:	df 91       	pop	r29
 526:	cf 91       	pop	r28
 528:	ff 91       	pop	r31
 52a:	ef 91       	pop	r30
 52c:	bf 91       	pop	r27
 52e:	af 91       	pop	r26
 530:	9f 91       	pop	r25
 532:	8f 91       	pop	r24
 534:	7f 91       	pop	r23
 536:	6f 91       	pop	r22
 538:	5f 91       	pop	r21
 53a:	4f 91       	pop	r20
 53c:	3f 91       	pop	r19
 53e:	2f 91       	pop	r18
 540:	0f 90       	pop	r0
 542:	00 92 5f 00 	sts	0x005F, r0	; 0x80005f <__TEXT_REGION_LENGTH__+0x7e005f>
 546:	0f 90       	pop	r0
 548:	1f 90       	pop	r1
 54a:	18 95       	reti

0000054c <adcInit>:
 54c:	cf 93       	push	r28
 54e:	df 93       	push	r29
 550:	1f 92       	push	r1
 552:	cd b7       	in	r28, 0x3d	; 61
 554:	de b7       	in	r29, 0x3e	; 62
 556:	87 e0       	ldi	r24, 0x07	; 7
 558:	89 83       	std	Y+1, r24	; 0x01
 55a:	8c e7       	ldi	r24, 0x7C	; 124
 55c:	90 e0       	ldi	r25, 0x00	; 0
 55e:	20 e4       	ldi	r18, 0x40	; 64
 560:	fc 01       	movw	r30, r24
 562:	20 83       	st	Z, r18
 564:	8a e7       	ldi	r24, 0x7A	; 122
 566:	90 e0       	ldi	r25, 0x00	; 0
 568:	29 81       	ldd	r18, Y+1	; 0x01
 56a:	20 68       	ori	r18, 0x80	; 128
 56c:	fc 01       	movw	r30, r24
 56e:	20 83       	st	Z, r18
 570:	00 00       	nop
 572:	0f 90       	pop	r0
 574:	df 91       	pop	r29
 576:	cf 91       	pop	r28
 578:	08 95       	ret

0000057a <adcStartMeasurement>:
 57a:	cf 93       	push	r28
 57c:	df 93       	push	r29
 57e:	1f 92       	push	r1
 580:	cd b7       	in	r28, 0x3d	; 61
 582:	de b7       	in	r29, 0x3e	; 62
 584:	89 83       	std	Y+1, r24	; 0x01
 586:	8c e7       	ldi	r24, 0x7C	; 124
 588:	90 e0       	ldi	r25, 0x00	; 0
 58a:	29 81       	ldd	r18, Y+1	; 0x01
 58c:	2f 70       	andi	r18, 0x0F	; 15
 58e:	20 64       	ori	r18, 0x40	; 64
 590:	fc 01       	movw	r30, r24
 592:	20 83       	st	Z, r18
 594:	8a e7       	ldi	r24, 0x7A	; 122
 596:	90 e0       	ldi	r25, 0x00	; 0
 598:	2a e7       	ldi	r18, 0x7A	; 122
 59a:	30 e0       	ldi	r19, 0x00	; 0
 59c:	f9 01       	movw	r30, r18
 59e:	20 81       	ld	r18, Z
 5a0:	20 64       	ori	r18, 0x40	; 64
 5a2:	fc 01       	movw	r30, r24
 5a4:	20 83       	st	Z, r18
 5a6:	00 00       	nop
 5a8:	0f 90       	pop	r0
 5aa:	df 91       	pop	r29
 5ac:	cf 91       	pop	r28
 5ae:	08 95       	ret

000005b0 <adcGetValue>:
 5b0:	cf 93       	push	r28
 5b2:	df 93       	push	r29
 5b4:	1f 92       	push	r1
 5b6:	cd b7       	in	r28, 0x3d	; 61
 5b8:	de b7       	in	r29, 0x3e	; 62
 5ba:	89 83       	std	Y+1, r24	; 0x01
 5bc:	8c e7       	ldi	r24, 0x7C	; 124
 5be:	90 e0       	ldi	r25, 0x00	; 0
 5c0:	29 81       	ldd	r18, Y+1	; 0x01
 5c2:	2f 70       	andi	r18, 0x0F	; 15
 5c4:	20 64       	ori	r18, 0x40	; 64
 5c6:	fc 01       	movw	r30, r24
 5c8:	20 83       	st	Z, r18
 5ca:	8a e7       	ldi	r24, 0x7A	; 122
 5cc:	90 e0       	ldi	r25, 0x00	; 0
 5ce:	2a e7       	ldi	r18, 0x7A	; 122
 5d0:	30 e0       	ldi	r19, 0x00	; 0
 5d2:	f9 01       	movw	r30, r18
 5d4:	20 81       	ld	r18, Z
 5d6:	20 64       	ori	r18, 0x40	; 64
 5d8:	fc 01       	movw	r30, r24
 5da:	20 83       	st	Z, r18
 5dc:	01 c0       	rjmp	.+2      	; 0x5e0 <adcGetValue+0x30>
 5de:	00 00       	nop
 5e0:	8a e7       	ldi	r24, 0x7A	; 122
 5e2:	90 e0       	ldi	r25, 0x00	; 0
 5e4:	fc 01       	movw	r30, r24
 5e6:	80 81       	ld	r24, Z
 5e8:	88 2f       	mov	r24, r24
 5ea:	90 e0       	ldi	r25, 0x00	; 0
 5ec:	80 74       	andi	r24, 0x40	; 64
 5ee:	99 27       	eor	r25, r25
 5f0:	89 2b       	or	r24, r25
 5f2:	a9 f7       	brne	.-22     	; 0x5de <adcGetValue+0x2e>
 5f4:	88 e7       	ldi	r24, 0x78	; 120
 5f6:	90 e0       	ldi	r25, 0x00	; 0
 5f8:	fc 01       	movw	r30, r24
 5fa:	80 81       	ld	r24, Z
 5fc:	91 81       	ldd	r25, Z+1	; 0x01
 5fe:	0f 90       	pop	r0
 600:	df 91       	pop	r29
 602:	cf 91       	pop	r28
 604:	08 95       	ret

00000606 <_exit>:
 606:	f8 94       	cli

00000608 <__stop_program>:
 608:	ff cf       	rjmp	.-2      	; 0x608 <__stop_program>
